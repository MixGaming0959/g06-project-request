package controller

import (
	"net/http"

	"github.com/MixGaming0959/project02/entity"
	"github.com/gin-gonic/gin"
)

/*
// POST /passwords
func CreatePassword(c *gin.Context) {
	var password entity.Password
	if err := c.ShouldBindJSON(&password); err != nil {
		c.JSON(http.StatusBadRequest, gin.H{"error": err.Error()})
		return
	}
	if err := entity.DB().Create(&password).Error; err != nil {
		c.JSON(http.StatusBadRequest, gin.H{"error": err.Error()})
		return
	}
	c.JSON(http.StatusOK, gin.H{"data": password})
}
*/

// GET /password/:id
func GetPassword(c *gin.Context) {
	var password entity.Password
	id := c.Param("id")
	if err := entity.DB().Raw("SELECT * FROM passwords WHERE id = ?", id).Scan(&password).Error; err != nil {
		c.JSON(http.StatusBadRequest, gin.H{"error": err.Error()})
		return
	}
	c.JSON(http.StatusOK, gin.H{"data": password})
}

// GET /passwords
func ListPasswords(c *gin.Context) {
	var passwords []entity.Password
	if err := entity.DB().Raw("SELECT * FROM passwords").Scan(&passwords).Error; err != nil {
		c.JSON(http.StatusBadRequest, gin.H{"error": err.Error()})
		return
	}
	c.JSON(http.StatusOK, gin.H{"data": passwords})
}

/*
// DELETE /passwords/:id
func DeletePassword(c *gin.Context) {
	id := c.Param("id")
	if tx := entity.DB().Exec("DELETE FROM passwords WHERE id = ?", id); tx.RowsAffected == 0 {
		c.JSON(http.StatusBadRequest, gin.H{"error": "password not found"})
		return
	}
	c.JSON(http.StatusOK, gin.H{"data": id})
}

// PATCH /passwords
func UpdatePassword(c *gin.Context) {
	var password entity.Password
	if err := c.ShouldBindJSON(&password); err != nil {
		c.JSON(http.StatusBadRequest, gin.H{"error": err.Error()})
		return
	}
	if tx := entity.DB().Where("id = ?", password.ID).First(&password); tx.RowsAffected == 0 {
		c.JSON(http.StatusBadRequest, gin.H{"error": "password not found"})
		return
	}
	if err := entity.DB().Save(&password).Error; err != nil {
		c.JSON(http.StatusBadRequest, gin.H{"error": err.Error()})
		return
	}
	c.JSON(http.StatusOK, gin.H{"data": password})
}
*/
